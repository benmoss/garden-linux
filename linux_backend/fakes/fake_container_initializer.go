// This file was generated by counterfeiter
package fakes

import (
	"sync"

	"github.com/cloudfoundry-incubator/garden-linux/linux_backend"
)

type FakeContainerInitializer struct {
	SetHostnameStub        func(hostname string) error
	setHostnameMutex       sync.RWMutex
	setHostnameArgsForCall []struct {
		hostname string
	}
	setHostnameReturns struct {
		result1 error
	}
	MountProcStub        func() error
	mountProcMutex       sync.RWMutex
	mountProcArgsForCall []struct{}
	mountProcReturns struct {
		result1 error
	}
	MountTmpStub        func() error
	mountTmpMutex       sync.RWMutex
	mountTmpArgsForCall []struct{}
	mountTmpReturns struct {
		result1 error
	}
}

func (fake *FakeContainerInitializer) SetHostname(hostname string) error {
	fake.setHostnameMutex.Lock()
	fake.setHostnameArgsForCall = append(fake.setHostnameArgsForCall, struct {
		hostname string
	}{hostname})
	fake.setHostnameMutex.Unlock()
	if fake.SetHostnameStub != nil {
		return fake.SetHostnameStub(hostname)
	} else {
		return fake.setHostnameReturns.result1
	}
}

func (fake *FakeContainerInitializer) SetHostnameCallCount() int {
	fake.setHostnameMutex.RLock()
	defer fake.setHostnameMutex.RUnlock()
	return len(fake.setHostnameArgsForCall)
}

func (fake *FakeContainerInitializer) SetHostnameArgsForCall(i int) string {
	fake.setHostnameMutex.RLock()
	defer fake.setHostnameMutex.RUnlock()
	return fake.setHostnameArgsForCall[i].hostname
}

func (fake *FakeContainerInitializer) SetHostnameReturns(result1 error) {
	fake.SetHostnameStub = nil
	fake.setHostnameReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeContainerInitializer) MountProc() error {
	fake.mountProcMutex.Lock()
	fake.mountProcArgsForCall = append(fake.mountProcArgsForCall, struct{}{})
	fake.mountProcMutex.Unlock()
	if fake.MountProcStub != nil {
		return fake.MountProcStub()
	} else {
		return fake.mountProcReturns.result1
	}
}

func (fake *FakeContainerInitializer) MountProcCallCount() int {
	fake.mountProcMutex.RLock()
	defer fake.mountProcMutex.RUnlock()
	return len(fake.mountProcArgsForCall)
}

func (fake *FakeContainerInitializer) MountProcReturns(result1 error) {
	fake.MountProcStub = nil
	fake.mountProcReturns = struct {
		result1 error
	}{result1}
}

func (fake *FakeContainerInitializer) MountTmp() error {
	fake.mountTmpMutex.Lock()
	fake.mountTmpArgsForCall = append(fake.mountTmpArgsForCall, struct{}{})
	fake.mountTmpMutex.Unlock()
	if fake.MountTmpStub != nil {
		return fake.MountTmpStub()
	} else {
		return fake.mountTmpReturns.result1
	}
}

func (fake *FakeContainerInitializer) MountTmpCallCount() int {
	fake.mountTmpMutex.RLock()
	defer fake.mountTmpMutex.RUnlock()
	return len(fake.mountTmpArgsForCall)
}

func (fake *FakeContainerInitializer) MountTmpReturns(result1 error) {
	fake.MountTmpStub = nil
	fake.mountTmpReturns = struct {
		result1 error
	}{result1}
}

var _ linux_backend.ContainerInitializer = new(FakeContainerInitializer)
